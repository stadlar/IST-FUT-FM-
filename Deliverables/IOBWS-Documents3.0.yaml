openapi: 3.0.1
info:
  title: IOBWS 3.0 Digital Documents
  version: "3.0"
  description: |
    # Summary
    
    This document represents version 3.0 of the Icelandic Online Banking Services (IOBWS)
    and is released as a part of the technical specification ÍST TS 314, digital documents, 
    by the Icelandic Standards Council.
    Previous versions of IOBWS, released in 2007 and 2013 respectively, each used the then most recent OASIS SOAP standards.
    TS 314 is the immidate successor to TS 165:2013 but offers a more up to date and interoperable set of
    Application Programming Interfaces (APIs).

    In places the contract uses elements based on the Berlin Group NextGenPSD2 XS2A Framework, mainly
    versions 1.3.5 and 1.3.8 of that specification. Attribution applies as required by 
    the CC BY 4.0 license NextGenPSD2 is released under.

    ## Remark on character set support

    The definition of UTF-8 strings in context of this API has to support at least the following characters

    a b c d e f g h i j k l m n o p q r s t u v w x y z å ä ö æ ø á ð é í ó ú ý	þ	æ	ö
    
    A B C D E F G H I J K L M N O P Q R S T U V W X Y Z Å Ä Ö Æ Ø Á Ð É Í Ó Ú Ý	Þ	Æ	Ö

    0 1 2 3 4 5 6 7 8 9
     
    / - ? : ( ) . , ' + @
    
    Space

  license:
    name: Creative Commons Attribution 4.0 International Public License
    url: https://creativecommons.org/licenses/by/4.0/
  contact:
    name: Stadlarad Islands
    url: https://www.stadlar.is
    email: openbanking@stadlar.is

externalDocs:
  description: |
    Documentation for ÍS TS-314 (Technical Specifications, Technical Guidelines)
  url: https://github.com/stadlar/IST-FUT-FMTH/tree/master/Deliverables

servers:
  - url: https://documents.example.com
    description: Example production server
  - url: https://documents-sandbox.example.com
    description: Example sandbox server for testing


paths:

  #####################################################
  # Document Service
  #####################################################

  /v1/documents/{document-store}:

    post:
      summary: Upload and store new documents
      description: Upload and store new documents
      operationId: uploadDocument
      tags:
        - Document Service (DS)
      security:
        - {}
        - BearerAuthOAuth: []
      parameters:
      #path
        - $ref: "#/components/parameters/documentStore"
      #query
      #header
        #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #mandatory header parameter
        #optional header parameters
        - $ref: "#/components/parameters/USR-IP-Address_optional"
        - $ref: "#/components/parameters/Idempotency-Key"

      requestBody:
        $ref: "#/components/requestBodies/documentsProcessInitiation"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_DocumentsProcessWithStatusDetails"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"
          
    get:
      summary: Query uploaded documents processes
      description: |
        Find uploaded documents process by query parameters. Only the document sender can search for the document.
        The document owner goes through the banks portal.
      operationId: searchForDocumentsProcess
      tags:
        - Document Service (DS)
      security:
        - {}
        - BearerAuthOAuth: []
      parameters:
        #path
        - $ref: "#/components/parameters/documentStore"
        #query
        - $ref: "#/components/parameters/senderKennitalaQuery"
        - $ref: "#/components/parameters/documentsProcessIdQuery"
        - $ref: "#/components/parameters/documentTypeCode"
        - $ref: "#/components/parameters/status"
        - $ref: "#/components/parameters/dateFrom"
        - $ref: "#/components/parameters/dateTo"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/itemsPerPage"
        #header
          #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #optional header parameters
        - $ref: "#/components/parameters/USR-IP-Address_optional"
        #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_DocumentsProcessListWithStatusDetails"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/documents/{document-store}/{sender-kennitala}/{documents-id}:

    put:
      summary: Update documents
      description: |
        Update documents if the document type allows it. User can choose to only send new or changed files
      operationId: update
      tags:
        - Document Service (DS)

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
      #path
        - $ref: "#/components/parameters/documentStore"
        - $ref: "#/components/parameters/senderKennitala"
        - $ref: "#/components/parameters/documentsId"
      #query # NO QUERY PARAMETER
      #header
        #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #optional header parameters
        - $ref: "#/components/parameters/USR-IP-Address_optional"
        #NO REQUEST BODY

      requestBody:
        $ref: "#/components/requestBodies/documentsProcessInitiation"


      responses:
        '200':
          $ref: "#/components/responses/OK_200_UpdateDocumentsProcess"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/documents/{document-store}/{sender-kennitala}/types:

    get:
      summary: Get list of all document types
      description: |
        Get list of all document types. Document types control if document can be updated
      operationId: getDocumentTypeList
      tags:
        - Document Service (DS)
      security:
        - {}
        - BearerAuthOAuth: []
      parameters:
        #path
        - $ref: "#/components/parameters/documentStore"
        - $ref: "#/components/parameters/senderKennitala"
        #query
        #header
          #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #optional header parameters
        - $ref: "#/components/parameters/USR-IP-Address_optional"
        #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_DocumentTypeDetails"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

components:
#####################################################
# Predefined Components
#####################################################

  securitySchemes:
  #####################################################
  # Predefined Security Schemes:
  #
  # In this file only the basic security element to transport
  # the bearer token of an OAuth2 process, which has to
  # be included in the HTTP header is described.
  #
  # WARNING:
  # If you want to use this file for a productive implementation,
  # it is recommended to adjust the security schemes according to
  # your system environments and security policies.
  #####################################################
    BearerAuthOAuth:
      description: |
        Bearer Token.

        Is contained only, if an OAuth2 based authentication was performed in a pre-step or
        an OAuth2 based SCA was performed in a preceding IOBWS service in the same session.
      type: http
      scheme: bearer

  parameters:
  #####################################################
  # Predefined Parameters
  #####################################################

    X-Request-ID:
      name: X-Request-ID
      in: header
      description: ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid

    USR-IP-Address_optional:
      name: USR-IP-Address
      in: header
      description: |
        The forwarded IP Address header field consists of the corresponding http request IP Address field between User and intermediary service.
      schema:
        type: string
        format: ipv4
      required: false
      example: 192.168.8.78

    documentsId:
      name: documents-id
      in: path
      description: |
        Document id in path
      required: true
      schema:
        $ref: "#/components/schemas/uuid"
        
    documentsProcessIdQuery:
      name: documentsProcessId
      in: query
      description: |
        Documents process id.
      required: false
      schema:
        $ref: "#/components/schemas/uuid"

    documentStore:
      name: document-store
      description: |
        The name of the store where the documents are located. 
      in: path
      required: true
      schema:
        type: string

    page:
      name: page
      in: query
      description: OK
      required: true
      schema:
        type: integer

    itemsPerPage:
      name: itemsPerPage
      in: query
      description: OK
      required: true
      schema:
        type: integer

    dateFrom:
      name: dateFrom
      in: query
      description: |
        Conditional: Starting date (inclusive the date dateFrom) of the expected list, mandated if no delta access is required
        and if bookingStatus does not equal "information.

        The relevant date is usually the booking date of the instrument e.g. financial transaction or currency rate value date.

      required: false
      schema:
        type: string
        format: date

    dateTo:
      name: dateTo
      in: query
      description: |
        End date (inclusive the data dateTo) of the expected list, default is "now" if not given.

        Might be ignored if a delta function is used.

        The relevant date is usually the booking date of the instrument e.g. financial transaction or currency rate value date.

      required: false
      schema:
        type: string
        format: date

    senderKennitalaQuery:
      name: senderKennitala
      in: query
      description: |
        Kennitala of the document sender for filtering.
      required: true
      schema:
        $ref: "#/components/schemas/kennitala"

    senderKennitala:
      name: sender-kennitala
      in: path
      description: |
        Kennitala of the documents sender.
      required: true
      schema:
        $ref: "#/components/schemas/kennitala"

    documentTypeCode:
      name: documentTypeCode
      in: query
      description: |
        Document Type Code
      required: false
      schema:
        type: string
        minLength: 10

    status:
      name: status
      in: query
      description: |
        Process status
      required: false
      schema:
        $ref: "#/components/schemas/processStatus"
      
    Idempotency-Key:
      name: Idempotency-Key
      in: header
      description: Idempotent value for the operation being performed.
      required: false
      example: "doc-init-001"
      schema:
        type: string

  schemas:
    #####################################################
    # Predefined Schemas
    #####################################################

    #####################################################
    # _links
    #####################################################

    hrefType:
      description: Link to a resource.
      type: object
      properties:
        href:
          $ref: "#/components/schemas/hrefEntry"

    hrefEntry:
      description: Link to a resource.
      type: string

    _linksAll:
      description: |
        A _link object with all availabel link types.
      type: object
      additionalProperties:
        $ref: "#/components/schemas/hrefType"
      properties:
        confirmation:
          $ref: "#/components/schemas/hrefType"
        self:
          $ref: "#/components/schemas/hrefType"
        status:
          $ref: "#/components/schemas/hrefType"
        scaStatus:
          $ref: "#/components/schemas/hrefType"
        first:
          $ref: "#/components/schemas/hrefType"
        next:
          $ref: "#/components/schemas/hrefType"
        previous:
          $ref: "#/components/schemas/hrefType"
        last:
          $ref: "#/components/schemas/hrefType"
        download:
          $ref: "#/components/schemas/hrefType"

    kennitala:
      description: |
        An Icelandic national ID, either issued for individuals by the Registers Iceland (Þjóðskrá) or the 
        Register of Enterprises maintained by the office of Iceland Revenue and Customs (Skatturinn). As
        suggestions to change this ID from the current pattern exist, future updates might be needed.
        https://en.wikipedia.org/wiki/Icelandic_identification_number
      type: string
      pattern: '[0-9]{10}'
      example: "1111111119"

    documentTypeDetails:
      description: |
        Document type details.
      type: object
      required:
        - code
        - name
        - durableMedia
      properties:
        code:
          description: Unique code for the document type.
          type: string
          maxLength: 10
        name:
          description: Short description for the document type
          type: string
          maxLength: 70
        durableMedia:
          description: |
            Control flag describing if document type is durable media. If document type
            is durable media then any documents process using this code can not be updated.
          type: boolean
        description:
          description: |
            Long description for the document
          type: string
          maxLength: 140

    documentTypeList:
      description: |
        List of document type with details.
      type: object
      required:
        - documentTypes
      properties:
        documentTypes:
          type: array
          items:
            $ref: "#/components/schemas/documentTypeDetails"

    fileDetails:
      description: |
        Document details.
      type: object
      required:
        - id
        - receiverKennitala
        - fileType
      properties:
        id:
          $ref: "#/components/schemas/uuid"
        description:
          description: |
            The file description usually in this format: "<Company name as sender> - <Document type>"
          type: string
          maxLength: 140
        receiverKennitala:
          $ref: "#/components/schemas/kennitala"
        fileType:
          description: |
            File type only xml, pdf, link is allowed. Xml and pdf are physical files and link is reference to file
          type: string
          enum:
            - "XML"
            - "PDF"
        file:
          description: The file in the form of base64 encoded characters
          type: string
          format: byte

    documentsProcessDetails:
      description: |
        Documents process details.
      type: object
      required:
        - id
        - name
        - senderKennitala
        - documentTypeCode
        - files
      properties:
        id:
          $ref: "#/components/schemas/uuid"
        name:
          description: Short description for the documents process
          type: string
          maxLength: 70
        description:
          description: |
            The file description usually in this format: "<Company name as sender> - <Document type>"
          type: string
          maxLength: 140
        senderKennitala:
          $ref: "#/components/schemas/kennitala"
        documentTypeCode:
          description: |
            Document type code retrived from {sender-kennitala}/types
          type: string
        files:
          type: array
          items:
            $ref: "#/components/schemas/fileDetails"

    processStatus:
      description: |
        Process status. The value is one of the following:
        - "received":             The document(s) has been received but processing has not started
        - "inProgress":           The document(s) is being processed
        - "completed":            The document(s) has been processed
        - "completedWithErrors":  The document(s) has been processed with errors
        - "failed":               Failed to process document
      type: string
      enum:
        - "received"
        - "inProgress"
        - "completed"
        - "completedWithErrors"
        - "failed"

    fileWithStatusDetails:
      description: |
        Document details.
      type: object
      required:
        - id
        - receiverKennitala
        - status
      properties:
        id:
          $ref: "#/components/schemas/uuid"
        description:
          description: |
            The file description usually in this format: "<Company name as sender> - <Document type>"
          type: string
          maxLength: 140
        receiverKennitala:
          description: |
            The ID Number of the receiver of the document. https://en.wikipedia.org/wiki/Icelandic_identification_number
          type: string
          maxLength: 10
        fileType:
          description: |
            File type only xml, pdf, link is allowed. Xml and pdf are physical files and link is reference to file
          type: string
          enum:
            - "XML"
            - "PDF"
        status:
          $ref: "#/components/schemas/processStatus"
        statusMessage:
          description: Process status message
          type: string
          maxLength: 250

    documentsProcessWithStatusDetails:
      description: |
        Documents process details.
      type: object
      required:
        - id
        - name
        - senderKennitala
        - documentTypeCode
        - files
      properties:
        id:
          # Unique ID of the process, as determined by the initiating party.
          $ref: "#/components/schemas/uuid"
        name:
          description: Short description for the process
          type: string
          maxLength: 70
        description:
          description: |
            The file description usually in this format: "<Company name as sender> - <Document type>"
          type: string
          maxLength: 140
        senderKennitala:
          $ref: "#/components/schemas/kennitala"
        documentTypeCode:
          description: |
            Document type code retrived from {sender-kennitala}/types
          type: string
        status:
          $ref: "#/components/schemas/processStatus"
        files:
          type: array
          items:
            $ref: "#/components/schemas/fileWithStatusDetails"

    documentsProcessWithStatusList:
      description: |
        List of documents with details.
      type: object
      required:
        - documentsProcesses
      properties:
        documentsProcesses:
          type: array
          items:
            $ref: "#/components/schemas/documentsProcessWithStatusDetails"

    uuid:
      description: Unique Identifier 
      type: string
      pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      minLength: 36
      maxLength: 36

    #####################################################
    # Standard messages
    #####################################################

    messageCategory:
      description: Category of the message category.
      type: string
      enum:
        - "ERROR"
        - "WARNING"

    MessageCode400:
      description: Message codes defined for HTTP Error code 400 (BAD_REQUEST).
      type: string
      enum:
        - "FORMAT_ERROR"              #gen
        - "PARAMETER_NOT_CONSISTENT"  #gen
        - "PARAMETER_NOT_SUPPORTED"   #gen
        - "SERVICE_INVALID"           #gen
        - "RESOURCE_UNKNOWN"          #gen
        - "RESOURCE_EXPIRED"          #gen
        - "RESOURCE_BLOCKED"          #gen
        - "TIMESTAMP_INVALID"         #gen
        - "PERIOD_INVALID"            #gen
        - "SESSIONS_NOT_SUPPORTED"    #IOBWS

    MessageCode401:
      description: Message codes defined for HTTP Error code 401 (UNAUTHORIZED).
      type: string
      enum:
        - "CERTIFICATE_INVALID"       #gen
        - "ROLE_INVALID"              #gen
        - "CERTIFICATE_EXPIRED"       #gen
        - "CERTIFICATE_BLOCKED"       #gen
        - "CERTIFICATE_REVOKE"        #gen
        - "CERTIFICATE_MISSING"       #gen
        - "SIGNATURE_INVALID"         #gen
        - "SIGNATURE_MISSING"         #gen
        - "CORPORATE_ID_INVALID"      #gen
        - "USR_CREDENTIALS_INVALID"   #gen
        - "CONSENT_INVALID"           #gen, IOBWS
        - "CONSENT_EXPIRED"           #gen
        - "TOKEN_UNKNOWN"             #gen
        - "TOKEN_INVALID"             #gen
        - "TOKEN_EXPIRED"             #gen

    MessageCode403:
      description: Message codes defined for HTTP Error code 403 (FORBIDDEN).
      type: string
      enum:
        - "SERVICE_BLOCKED"           #gen
        - "RESOURCE_UNKNOWN"          #gen
        - "RESOURCE_EXPIRED"          #gen

    MessageCode404:
      description: Message codes defined for HTTP Error code 404 (NOT FOUND).
      type: string
      enum:
        - "RESOURCE_UNKNOWN"          #gens

    MessageCode405:
      description: Message codes defined for HTTP Error code 405 (METHOD NOT ALLOWED).
      type: string
      enum:
        - "SERVICE_INVALID"           #gens

    MessageCode406:
      description: Message codes defined for HTTP Error code 406 (NOT ACCEPTABLE).
      type: string
      enum:
        - "REQUESTED_FORMATS_INVALID"  #IOBWS

    MessageCode409:
      description: Message codes defined for HTTP Error code 409 (CONFLICT).
      type: string
      enum:
        - "STATUS_INVALID"            #gen

    MessageCode429:
      description: Message codes for HTTP Error code 429 (TOO MANY REQUESTS).
      type: string
      enum:
        - "ACCESS_EXCEEDED"           #IOBWS

    #####################################################
    # Proprietary messages
    #####################################################

    messageText:
      description: Additional explaining text.
      type: string
      maxLength: 500

    message400:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode400"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"

    message401:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode401"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"

    message403:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode403"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"

    message404:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode404"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"

    message405:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode405"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"

    message406:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode406"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"

    message409:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode409"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"

    message429:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode429"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"


    #####################################################
    # RFC7807 Messages
    #####################################################

    errorTitle:
      description: |
        Short human readable description of error type.
        Could be in local language.
        To be provided by Banks.
      type: string
      maxLength: 70

    errorDetail:
      description: |
        Detailed human readable text specific to this instance of the error.
        XPath might be used to point to the issue generating the error in addition.
        Remark for Future: In future, a dedicated field might be introduced for the XPath.
      type: string
      maxLength: 500

    #####################################################
    # RFC7807 Messages
    #####################################################

    Error400:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 400.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            These URI will be provided by IOBWS as part of future technical specifications.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by Banks.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode400"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode400"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error401:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 401.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            These URI will be provided by IOBWS as part of future technical specifications.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by Banks.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode401"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode401"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error403:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 403.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            These URI will be provided by IOBWS as part of future technical specifications.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by Banks.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode403"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode403"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error404:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 404.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            These URI will be provided by IOBWS as part of future technical specifications.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by Banks.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode404"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode404"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error405:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 405.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            These URI will be provided by IOBWS as part of future technical specifications.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by Banks.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode405"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode405"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error406:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 406.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            These URI will be provided by IOBWS as part of future technical specifications.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by Banks.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode406"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode406"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error409:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 409.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            These URI will be provided by IOBWS as part of future technical specifications.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by Banks.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode409"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode409"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error429:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 429.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            These URI will be provided by IOBWS as part of future technical specifications.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by Banks.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode429"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: |
              This is a data element to support the declaration of additional errors in the context of [RFC7807]
              in case of a HTTP error code 429 for.
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode429"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error400_IOBWS:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 400.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message400"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error401_IOBWS:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 401.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message401"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error403_IOBWS:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 403.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message403"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error404_IOBWS:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 404.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message404"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error405_IOBWS:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 401.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message405"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error406_IOBWS:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 406.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message406"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error409_IOBWS:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 409.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message409"
        _links:
          $ref: "#/components/schemas/_linksAll"
      example:
        {
          "category": "ERROR",
          "code": "STATUS_INVALID",
          "text": "additional text information of the Bank up to 500 characters"
        }

    Error429_IOBWS:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 429.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message429"
        _links:
          $ref: "#/components/schemas/_linksAll"
      example:
        {
          "category": "ERROR",
          "code": "ACCESS_EXCEEDED",
          "text": "additional text information of the Bank up to 500 characters"
        }

  requestBodies:
    #####################################################
    # Reusable Request Bodies
    #####################################################

    documentsProcessInitiation:
      description: |
        JSON request body for a documents process inition or update request message
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/documentsProcessDetails"
          examples: 
            example:
              $ref: "#/components/examples/documentsProcessInitiation_json_Example"

  headers:
    #####################################################
    # Reusable Response Header Elements
    #####################################################

    X-Request-ID:
      description: ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid

    Location:
      description: |
        Location of the created resource.
      schema:
        type: string
        format: url
      required: false

  responses:
    #####################################################
    # Reusabale Responses
    #####################################################

    #####################################################
    # Positive Responses
    #####################################################

    OK_200_DocumentsProcessListWithStatusDetails:
      description: Get documents process details
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/documentsProcessWithStatusList"
          examples: 
            example:
              $ref: "#/components/examples/documentsProcessWithStatusList-200_json_Example"

    OK_200_DocumentsProcessWithStatusDetails:
      description: Get documents process details
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/documentsProcessWithStatusDetails"
          examples: 
            example:
              $ref: "#/components/examples/documentsProcessWithStatusDetails-200_json_Example"

    OK_200_UpdateDocumentsProcess:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/documentsProcessWithStatusDetails"
          examples: 
            example:
              $ref: "#/components/examples/documentsProcessWithStatusDetails-200_json_Example"

    OK_200_DocumentTypeDetails:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/documentTypeList"
          examples: 
            example:
              $ref: "#/components/examples/documentTypeListResponse-200_json_Example"

    #####################################################
    # Negative Responses
    #####################################################

    BAD_REQUEST_400:
      description: Bad Request

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error400_IOBWS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error400"

    UNAUTHORIZED_401:
      description: Unauthorized

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error401_IOBWS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error401"

    FORBIDDEN_403:
      description: Forbidden

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error403_IOBWS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error403"

    NOT_FOUND_404:
      description: Not found

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error404_IOBWS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error404"

    METHOD_NOT_ALLOWED_405:
      description: Method Not Allowed

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error405_IOBWS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error405"

    NOT_ACCEPTABLE_406:
      description: Not Acceptable

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error406_IOBWS"
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error406"

    REQUEST_TIMEOUT_408:
      description: Request Timeout

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes in case of HTTP code 408

    CONFLICT_409:
      description: Conflict

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error409_IOBWS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error409"

    UNSUPPORTED_MEDIA_TYPE_415:
      description: Unsupported Media Type

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes in case of HTTP code 415

    TOO_MANY_REQUESTS_429:
      description: Too Many Requests

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error429_IOBWS"
        application/problem+json:

          schema:
            $ref: "#/components/schemas/Error429"

    INTERNAL_SERVER_ERROR_500:
      description: Internal Server Error
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes in case of HTTP code 500

    SERVICE_UNAVAILABLE_503:
      description: Service Unavailable
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes in case of HTTP code 503

  examples:
    #####################################################
    # Predefined Examples
    #####################################################
    
    documentTypeListResponse-200_json_Example:
      description: List of document types.
      value:
        {
          "documentTypes": [
            { 
              "code": "STVO",
              "name": "/typ/3254b7b2-302c-72",
              "durableMedia": true,
              "description": "Pay slip from Company"
            },
            { 
              "code": "IDFR",
              "name": "/typ/3254b7b2-302c-72",
              "durableMedia": true,
              "description": "Account statement from Company"
            }
          ]
        }

    documentsProcessInitiation_json_Example:
      description: Documents upload request.
      value: 
        {
          "id": "3a378271-0a43-aa66-f273-377ae9ce135c",
          "name": "Account statements",
          "description": "Account statements for june 2022",
          "senderKennitala": "1111111199",
          "documentTypeCode": "IDFR",
          "files": [
            {
              "id": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
              "description": "Company - Account statement",
              "receiverKennitala": "1111112239",
              "fileType": "PDF",
              "file": "The file in the form of base64 encoded characters"
            },
            {
              "id": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
              "description": "Company - Account statement",
              "receiverKennitala": "1111112249",
              "fileType": "PDF",
              "file": "The file in the form of base64 encoded characters"
            } 
          ]
        }

    documentsProcessWithStatusDetails-200_json_Example:
      description: Documents process result.
      value: 
        {
          "id": "3a378271-0a43-aa66-f273-377ae9ce135c",
          "name": "Account statements",
          "description": "Account statements for june 2022",
          "senderKennitala": "1111111199",
          "documentTypeCode": "IDFR",
          "status": "received",
          "files": [
            {
              "id": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
              "description": "",
              "receiverKennitala": "1111112239",
              "fileType": "PDF",
              "status": "received",
              "statusMessage": "File is currently being processed"
            },
            {
              "id": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
              "description": "",
              "receiverKennitala": "1111112249",
              "fileType": "PDF",
              "status": "received",
              "statusMessage": "File is currently being processed"
            }
          ]
        }

    documentsProcessWithStatusList-200_json_Example:
      description: Documents query result.
      value: 
        {
          "documentsProcesses": [
            {
              "id": "3a378271-0a43-aa66-f273-377ae9ce135c",
              "name": "Account statements",
              "description": "Account statements for june 2022",
              "senderKennitala": "1111111199",
              "documentTypeCode": "IDFR",
              "status": "received",
              "files": [
                {
                  "id": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                  "description": "",
                  "receiverKennitala": "1111112239",
                  "fileType": "PDF",
                  "status": "received",
                  "statusMessage": "File is currently being processed"
                },
                {
                  "id": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721",
                  "description": "",
                  "receiverKennitala": "1111112249",
                  "fileType": "PDF",
                  "status": "received",
                  "statusMessage": "File is currently being processed"
                }
              ]
            }
          ]
          
        }

security:
  #####################################################
  # Global security options
  #####################################################
  - {}

tags:
  #####################################################
  # Predefined Tags to Group Methods
  #####################################################

  - name: Document Service (DS)
    description: |
      The API interface for Documents offers the following services:
        * Initiation and update of a document request
        * Status information of a document
        * Document types
