openapi: 3.0.1
info:
  title: IOBWS 3.0 Currency Exchange Rate
  version: "3.0"
  description: |
    # Summary

    This document represents version 3.0 of the Icelandic Online Banking Services (IOBWS)
    and is released as a part of the technical specification ÍST TS 312, currency rates, 
    by the Icelandic Standards Council.
    Previous versions of IOBWS, released in 2007 and 2013 respectively, each used the then most recent OASIS SOAP standards.
    TS 312 is the immidate successor to TS 160:2013 but offers a more up to date and interoperable set of
    Application Programming Interfaces (APIs).

    In places the contract uses elements based on the Berlin Group NextGenPSD2 XS2A Framework, mainly
    versions 1.3.5 and 1.3.8 of that specification. Attribution applies as required by 
    the CC BY 4.0 license NextGenPSD2 is released under.

    ## Remark on character set support

    The definition of UTF-8 strings in context of this API has to support at least the following characters

    a b c d e f g h i j k l m n o p q r s t u v w x y z å ä ö æ ø á ð é í ó ú ý	þ	æ	ö
    
    A B C D E F G H I J K L M N O P Q R S T U V W X Y Z Å Ä Ö Æ Ø Á Ð É Í Ó Ú Ý	Þ	Æ	Ö

    0 1 2 3 4 5 6 7 8 9
     
    / - ? : ( ) . , ' + @
    
    Space

  license:
    name: Creative Commons Attribution 4.0 International Public License
    url: https://creativecommons.org/licenses/by/4.0/
  contact:
    name: Stadlarad Islands
    url: https://www.stadlar.is
    email: openbanking@stadlar.is

externalDocs:
  description: |
    Documentation for ÍS TS-312 (Technical Specifications, Technical Guidelines)
  url: https://github.com/stadlar/IST-FUT-FMTH/tree/master/Deliverables

servers:
  - url: https://currencies.example.com
    description: Example production server
  - url: https://currencies-sandbox.example.com
    description: Example s server for testing

paths:

  #####################################################
  # Currencies Information Service
  #####################################################

  /v1/currencies:

    get:
      summary: Read list of currencies.
      description: |
        Retrieve a list of all available currencies, optionally by a particular source.
      operationId: readCurrencies
      tags:
        - Currencies Information Service (CIS)
      security:
        - {}
        - BearerAuthOAuth: []
      parameters:
        #path
        #query
        - $ref: "#/components/parameters/currencySourceQuery"
        #header
        #mandatory header parameter
        #optional header parameters
        - $ref: "#/components/parameters/USR-IP-Address_optional"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_CURRENCIES"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/currencies/sources:

    get:
      summary: Read list of currencies sources
      description: |
        Retrieve all supported currencies sources.
      operationId: readCurrenciesSources
      tags:
        - Currencies Information Service (CIS)
      security:
        - {}
        - BearerAuthOAuth: []
      parameters:
        #path
        #query
        #header
        #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #optional header parameters
        - $ref: "#/components/parameters/USR-IP-Address_optional"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_CURRENCIES_SOURCES"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/currencies/{base-currency}/rates:

    get:
      summary: Read rates for a base currency.
      description: |
        Read currency rates for a given base currency.
      operationId: readCurrencyRates
      tags:
        - Currencies Information Service (CIS)
      security:
        - {}
        - BearerAuthOAuth: []
      parameters:
        #path
        - $ref: "#/components/parameters/baseCurrencyCode"
        #query
        - $ref: "#/components/parameters/currencySourceQuery"
        #header
        #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #optional header parameters
        - $ref: "#/components/parameters/USR-IP-Address_optional"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_BASE_CURRENCY_RATES"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/currencies/{quote-currency}/rates/{base-currency}:

    get:
      summary: Reads rates for a quoted currency with defined base currency.
      description: |
        Reads currency rates for a quoted currency, given a defined base currency.
      operationId: readCurrencyRatesBaseCurrency
      tags:
        - Currencies Information Service (CIS)
      security:
        - {}
        - BearerAuthOAuth: []
      parameters:
        #path
        - $ref: "#/components/parameters/quoteCurrencyCode"
        - $ref: "#/components/parameters/baseCurrencyCode"
        #query
        - $ref: "#/components/parameters/currencySourceQuery"
        #header
        #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #optional header parameters
        - $ref: "#/components/parameters/USR-IP-Address_optional"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_CURRENCY_RATES_BASE_CURRENCY"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/currencies/{quote-currency}/rates/{base-currency}/history:

    get:
      summary: Read rates history for single currency entity with base currency defined
      description: |
        Read rates for single currency entity with base currency defined
      operationId: readCurrencyRatesHistoryBaseCurrency
      tags:
        - Currencies Information Service (CIS)
      security:
        - {}
        - BearerAuthOAuth: []
      parameters:
        #path
        - $ref: "#/components/parameters/quoteCurrencyCode"
        - $ref: "#/components/parameters/baseCurrencyCode"
        #query
        - $ref: "#/components/parameters/currencySourceQuery"
        - $ref: "#/components/parameters/dateFrom"
        - $ref: "#/components/parameters/dateTo"
        #header
        #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #optional header parameters
        - $ref: "#/components/parameters/USR-IP-Address_optional"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_CURRENCY_RATES_BASE_CURRENCY_HISTORY"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

components:
#####################################################
# Predefined Components
#####################################################
  securitySchemes:
  #####################################################
  # Predefined Security Schemes:
  #
  # In this file only the basic security element to transport
  # the bearer token of an OAuth2 process, which has to
  # be included in the HTTP header is described.
  #
  # WARNING:
  # If you want to use this file for a productive implementation,
  # it is recommended to adjust the security schemes according to
  # your system environments and security policies.
  #####################################################
    BearerAuthOAuth:
      description: |
        Bearer Token.

        Is contained only, if an OAuth2 based authentication was performed in a pre-step or
        an OAuth2 based SCA was performed in a preceding AIS service in the same session.
      type: http
      scheme: bearer

  schemas:
  #####################################################
  # Predefined Schemas
  #####################################################
    
    authorization:
      description: |
        Authorization by OAuth2 based Protocol.
      type: string
      
    authorisationId:
      description: Resource identification of the related SCA.
      type: string
      example: "123auth456"
  
    hrefType:
      description: Link to a resource.
      type: object
      properties:
        href:
          $ref: "#/components/schemas/hrefEntry"

    hrefEntry:
      description: Link to a resource.
      type: string
      example: "/v1/payments/sepa-credit-transfers/1234-wertiq-983"
      
    currencyCode:
      description: |
        ISO 4217 Alpha 3 currency code.
      type: string
      pattern: '[A-Z]{3}'
      example: "EUR"
      
    currency:
      description: |
        Currency details.
      type: object
      required:
        - currency
      properties:
        currencyCode:
          $ref: "#/components/schemas/currencyCode"
        description:
          description: |
            Name of the currency source.
          type: string
          maxLength: 70

    currencyRate:
      description: |
        Currency details.
      type: object
      required:
        - baseCurrency
        - quoteCurrency
        - currencySource
        - buy
        - sell
      properties:
        baseCurrency:
          $ref: "#/components/schemas/currencyCode"
        quoteCurrency:
          $ref: "#/components/schemas/currencyCode"
        currencySource:
          $ref: "#/components/schemas/currencySource"
        buy:
          $ref: "#/components/schemas/amountValue"
        sell:
          $ref: "#/components/schemas/amountValue"
        date:
          description: |
            Execution datetime of the record
          type: string
          format: date
          example: "2020-08-02"

    currencySource:
      description: |
        Currency source.
      type: object
      required:
        - sourceName
      properties:
        sourceName:
          description: |
            Name of the currency source.
          type: string
          maxLength: 70
          example: "General"
          
    amountValue:
      description: |
        The amount given with fractional digits, where fractions must be compliant to the currency definition.
        Up to 14 significant figures. Negative amounts are signed by minus.
        The decimal separator is a dot.
        
        **Example:**
        Valid representations for EUR with up to two decimals are:
        
          * 1056
          * 5768.2
          * -1.50
          * 5877.78
      type: string
      pattern: "-?[0-9]{1,14}(\\.[0-9]{1,3})?"
      example: "5877.78"

        
    readCurrenciesResponse-200_json:
      description: A list of the accessible currencies.
      type: object
      required:
        - currencies
      properties:
        currency:
          type: array
          items:
            $ref: "#/components/schemas/currency"

    readCurrencyRateResponse-200_json:
      description: Descriptions of the accessible currencies.
      type: object
      required:
        - currencies
      properties:
        currencyRates:
          type: array
          items:
            $ref: "#/components/schemas/currencyRate"

    readCurrencySourcesResponse-200_json:
      description: Descriptions of the currency source.
      type: object
      required:
        - currencySources
      properties:
        currencySources:
          type: array
          items:
            $ref: "#/components/schemas/currencySource"

    readCurrencyRatesBaseCurrencyResponse-200_json:
      description: Descriptions of the accessible currencies.
      type: object
      required:
        - currencies
      properties:
        currencies:
          type: array
          items:
            $ref: "#/components/schemas/currencyRate"

    readCurrencyRatesBaseCurrencyHistoryResponse-200_json:
      description: Descriptions of the accessible currencies.
      type: object
      required:
        - currencies
      properties:
        currencies:
          type: array
          items:
            $ref: "#/components/schemas/currencyRate"
#####################################################
# Content of Request Bodies
#####################################################

#####################################################
# _links
#####################################################
    _linksAll:
      description: |
        A _link object with all availabel link types.
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      properties:
        scaRedirect:
          $ref: "#/components/schemas/hrefType"
        scaOAuth:
          $ref: "#/components/schemas/hrefType"
        confirmation:
          $ref: "#/components/schemas/hrefType"
        startAuthorisation:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithPsuIdentification:
          $ref: "#/components/schemas/hrefType"
        updatePsuIdentification:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithProprietaryData:
          $ref: "#/components/schemas/hrefType"
        updateProprietaryData:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        updatePsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        updateEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        updateAdditionalPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        updateAdditionalEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithAuthenticationMethodSelection:
          $ref: "#/components/schemas/hrefType"
        selectAuthenticationMethod:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithTransactionAuthorisation:
          $ref: "#/components/schemas/hrefType"
        authoriseTransaction:
          $ref: "#/components/schemas/hrefType"
        self:
          $ref: "#/components/schemas/hrefType"
        status:
          $ref: "#/components/schemas/hrefType"
        scaStatus:
          $ref: "#/components/schemas/hrefType"
        account:
          $ref: "#/components/schemas/hrefType"
        balances:
          $ref: "#/components/schemas/hrefType"
        transactions:
          $ref: "#/components/schemas/hrefType"
        transactionDetails:
          $ref: "#/components/schemas/hrefType"
        cardAccount:
          $ref: "#/components/schemas/hrefType"
        cardTransactions:
          $ref: "#/components/schemas/hrefType"
        first:
          $ref: "#/components/schemas/hrefType"
        next:
          $ref: "#/components/schemas/hrefType"
        previous:
          $ref: "#/components/schemas/hrefType"
        last:
          $ref: "#/components/schemas/hrefType"
        download:
          $ref: "#/components/schemas/hrefType"

    _linksCardAccountReport:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/hrefType"
      required:
        - cardAccount
      properties:
        cardAccount:
          $ref: "#/components/schemas/hrefType"
        first:
          $ref: "#/components/schemas/hrefType"
        next:
          $ref: "#/components/schemas/hrefType"
        previous:
          $ref: "#/components/schemas/hrefType"
        last:
          $ref: "#/components/schemas/hrefType"

    _linksAccountDetails:
      description: |
        Links to the account, which can be directly used for retrieving account information from this dedicated account.

        Links to "balances" and/or "transactions"

        These links are only supported, when the corresponding consent has been already granted.
      type: object
      additionalProperties:
        $ref: "#/components/schemas/hrefType"
      properties:
        balances:
          $ref: "#/components/schemas/hrefType"
        transactions:
          $ref: "#/components/schemas/hrefType"


#####################################################
# Tpp-Messages to Communicate Error Information
#####################################################


  #####################################################
  # Generic Elements
  #####################################################

    messageCategory:
      description: Category of the intermediary service message category.
      type: string
      enum:
        - "ERROR"
        - "WARNING"

    MessageCode2XX:
      description: Message codes for HTTP Error codes 2XX.
      type: string
      enum:
        - "WARNING"


    MessageCode400:
      description: Message codes defined for HTTP Error code 400 (BAD_REQUEST).
      type: string
      enum:
        - "FORMAT_ERROR"              #gen
        - "PARAMETER_NOT_CONSISTENT"  #gen
        - "PARAMETER_NOT_SUPPORTED"   #gen
        - "SERVICE_INVALID"           #gen
        - "RESOURCE_UNKNOWN"          #gen
        - "RESOURCE_EXPIRED"          #gen
        - "RESOURCE_BLOCKED"          #gen
        - "TIMESTAMP_INVALID"         #gen
        - "PERIOD_INVALID"            #gen
        - "SCA_METHOD_UNKNOWN"        #gen
        - "SCA_INVALID"               #gen
        - "CONSENT_UNKNOWN"           #gen
        - "SESSIONS_NOT_SUPPORTED"    #IOBWS



    MessageCode401:
      description: Message codes defined for HTTP Error code 401 (UNAUTHORIZED).
      type: string
      enum:
        - "CERTIFICATE_INVALID"       #gen
        - "ROLE_INVALID"              #gen
        - "CERTIFICATE_EXPIRED"       #gen
        - "CERTIFICATE_BLOCKED"       #gen
        - "CERTIFICATE_REVOKE"        #gen
        - "CERTIFICATE_MISSING"       #gen
        - "SIGNATURE_INVALID"         #gen
        - "SIGNATURE_MISSING"         #gen
        - "CORPORATE_ID_INVALID"      #gen
        - "USR_CREDENTIALS_INVALID"   #gen
        - "CONSENT_INVALID"           #gen, IOBWS
        - "CONSENT_EXPIRED"           #gen
        - "TOKEN_UNKNOWN"             #gen
        - "TOKEN_INVALID"             #gen
        - "TOKEN_EXPIRED"             #gen

    MessageCode403:
      description: Message codes defined for HTTP Error code 403 (FORBIDDEN).
      type: string
      enum:
        - "CONSENT_UNKNOWN"           #gen
        - "SERVICE_BLOCKED"           #gen
        - "RESOURCE_UNKNOWN"          #gen
        - "RESOURCE_EXPIRED"          #gen


    MessageCode404:
      description: Message codes defined for HTTP Error code 404 (NOT FOUND).
      type: string
      enum:
        - "RESOURCE_UNKNOWN"          #gens

    MessageCode405:
      description: Message codes defined for HTTP Error code 405 (METHOD NOT ALLOWED).
      type: string
      enum:
        - "SERVICE_INVALID"           #gens


    MessageCode406:
      description: Message codes defined for HTTP Error code 406 (NOT ACCEPTABLE).
      type: string
      enum:
        - "REQUESTED_FORMATS_INVALID"  #IOBWS

    MessageCode409:
      description: Message codes defined for HTTP Error code 409 (CONFLICT).
      type: string
      enum:
        - "STATUS_INVALID"            #gen

    MessageCode429:
      description: Message codes for HTTP Error code 429 (TOO MANY REQUESTS).
      type: string
      enum:
        - "ACCESS_EXCEEDED"           #IOBWS


  #####################################################
  # IOBWS scoped SVC-messages
  #####################################################


    messageText:
      description: Additional explaining text to the intermediary service.
      type: string
      maxLength: 500


    message400:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode400"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"
          

    message401:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode401"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"


    message403:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode403"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"


    message404:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode404"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"

    message405:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode405"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"

    message406:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode406"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"

    message409:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode409"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"

    message429:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/messageCategory"
        code:
          $ref: "#/components/schemas/MessageCode429"
        path:
          type: string
        text:
          $ref: "#/components/schemas/messageText"


  #####################################################
  # RFC7807 Messages
  #####################################################

    errorTitle:
      description: |
        Short human readable description of error type.
        Could be in local language.
        To be provided by Banks.
      type: string
      maxLength: 70

    errorDetail:
      description: |
        Detailed human readable text specific to this instance of the error.
        XPath might be used to point to the issue generating the error in addition.
        Remark for Future: In future, a dedicated field might be introduced for the XPath.
      type: string
      maxLength: 500




  #####################################################
  # RFC7807 Messages
  #####################################################


    Error400:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 400.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            These URI will be provided by IOBWS as part of future technical specifications.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by Banks.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode400"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode400"
        _links:
          $ref: "#/components/schemas/_linksAll"


    Error401:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 401.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            These URI will be provided by IOBWS as part of future technical specifications.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by Banks.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode401"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode401"
        _links:
          $ref: "#/components/schemas/_linksAll"


    Error403:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 403.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            These URI will be provided by IOBWS as part of future technical specifications.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by Banks.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode403"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode403"
        _links:
          $ref: "#/components/schemas/_linksAll"


    Error404:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 404.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            These URI will be provided by IOBWS as part of future technical specifications.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by Banks.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode404"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode404"
        _links:
          $ref: "#/components/schemas/_linksAll"


    Error405:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 405.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            These URI will be provided by IOBWS as part of future technical specifications.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by Banks.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode405"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode405"
        _links:
          $ref: "#/components/schemas/_linksAll"


    Error406:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 406.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            These URI will be provided by IOBWS as part of future technical specifications.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by Banks.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode406"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode406"
        _links:
          $ref: "#/components/schemas/_linksAll"


    Error409:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 409.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            These URI will be provided by IOBWS as part of future technical specifications.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by Banks.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode409"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode409"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error429:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 429.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            These URI will be provided by IOBWS as part of future technical specifications.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human readable description of error type.
            Could be in local language.
            To be provided by Banks.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode429"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: |
              This is a data element to support the declaration of additional errors in the context of [RFC7807]
              in case of a HTTP error code 429 for.
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/errorTitle"
              detail:
                $ref: "#/components/schemas/errorDetail"
              code:
                $ref: "#/components/schemas/MessageCode429"
        _links:
          $ref: "#/components/schemas/_linksAll"
      #example:
        #$ref: "#/components/examples/RFC7807_ErrorInfoBody"


    Error400_IOBWS:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 400.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message400"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error401_IOBWS:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 401.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message401"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error403_IOBWS:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 403.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message403"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error404_IOBWS:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 404.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message404"
        _links:
          $ref: "#/components/schemas/_linksAll"
          
    Error405_IOBWS:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 401.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message405"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error406_IOBWS:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 406.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message406"
        _links:
          $ref: "#/components/schemas/_linksAll"

    Error409_IOBWS:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 409.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message409"
        _links:
          $ref: "#/components/schemas/_linksAll"
      example:
        {
          "category": "ERROR",
          "code": "STATUS_INVALID",
          "text": "additional text information of the Bank up to 500 characters"
        }

    Error429_IOBWS:
      description: |
        IOBWS specific definition of reporting error information in case of a HTTP error code 429.
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/message429"
        _links:
          $ref: "#/components/schemas/_linksAll"
      example:
        {
          "category": "ERROR",
          "code": "ACCESS_EXCEEDED",
          "text": "additional text information of the Bank up to 500 characters"
        }

  parameters:
  #####################################################
  # Predefined Parameters
  #####################################################

    quoteCurrencyCode:
      name: quote-currency
      in: path
      description: |
        Currency code in path.
      required: true
      schema:
        $ref: "#/components/schemas/currencyCode"

    baseCurrencyCode:
      name: base-currency
      in: path
      description: |
        Currency code in path.
      required: true
      schema:
        $ref: "#/components/schemas/currencyCode"

    currencySourceQuery:
      name: currencySourceQuery
      in: query
      description: |
        The currency source
      required: false
      schema:
        $ref: "#/components/schemas/currencySource"

    authorisationId:
      name: authorisationId
      in: path
      description: Resource identification of the related SCA.
      required: true
      schema:
        $ref: "#/components/schemas/authorisationId"

    Authorization:
      name: Authorization
      in: header
      description: |
        This field  might be used in case where a consent was agreed between Bank and user through an OAuth2 based protocol,
        facilitated by the intermediary service.
      required: false
      schema:
        $ref: "#/components/schemas/authorization"

    dateFrom:
      name: dateFrom
      in: query
      description: |
        Conditional: Starting date (inclusive the date dateFrom) of the expected list, mandated if no delta access is required
        and if bookingStatus does not equal "information.

        The relevant date is usually the booking date of the instrument e.g. financial transaction or currency rate value date.

      required: false
      schema:
        type: string
        format: date

    dateTo:
      name: dateTo
      in: query
      description: |
        End date (inclusive the data dateTo) of the expected list, default is "now" if not given.

        Might be ignored if a delta function is used.

        The relevant date is usually the booking date of the instrument e.g. financial transaction or currency rate value date.

      required: false
      schema:
        type: string
        format: date

    X-Request-ID:
      name: X-Request-ID
      in: header
      description: ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid

    SVC-Signature-Certificate:
      name: SVC-Signature-Certificate
      in: header
      description: |
        The certificate used for signing the request, in base64 encoding.
        Must be contained if a signature is contained.
      schema:
        type: string
        format: byte
      required: false # conditional

    SVC-Redirect-Preferred:
      name: SVC-Redirect-Preferred
      in: header
      description: |
        If it equals "true", the intermediary service prefers a redirect over an embedded SCA approach.
        If it equals "false", the intermediary service prefers not to be redirected for SCA. The Bank will then choose between the Embedded or the Decoupled
        SCA approach, depending on the choice of the SCA procedure by the intermediary service or user.
        If the parameter is not used, the Bank will choose the SCA approach to be applied depending on the SCA method chosen by the
        intermediary service or user.
      schema:
        type: boolean
      required: false

    SVC-Redirect-URI:
      name: SVC-Redirect-URI
      in: header
      description: |
        URI of the intermediary service, where the transaction flow shall be redirected to after a Redirect.

        Mandated for the Redirect SCA Approach, specifically
        when SVC-Redirect-Preferred equals "true".
        It is recommended to always use this header field.

        **Remark for Future:**
        This field might be changed to mandatory in the next version of the specification.
      schema:
        type: string
        format: uri
      required: false # conditional

    SVC-Nok-Redirect-URI:
      name: SVC-Nok-Redirect-URI
      in: header
      description: |
        If this URI is contained, the intermediary service is asking to redirect the transaction flow to this address instead of the SVC-Redirect-URI in case
        of a negative result of the redirect SCA method. This might be ignored by the Bank.
      schema:
        type: string
        format: uri
      required: false

    SVC-Explicit-Authorisation-Preferred:
      name: SVC-Explicit-Authorisation-Preferred
      in: header
      description: |
        If it equals "true", the intermediary service prefers to start the authorisation process separately,
        e.g. because of the usage of a signing basket.
        This preference might be ignored by the Bank, if a signing basket is not supported as functionality.

        If it equals "false" or if the parameter is not used, there is no preference of the intermediary service.
        This especially indicates that the intermediary service assumes a direct authorisation of the transaction in the next step,
        without using a signing basket.
      schema:
        type: boolean
      required: false

    SVC-Brand-Logging-Information:
      name: SVC-Brand-Logging-Information
      in: header
      description: |
        This header might be used by intermediary services to inform the Bank about the brand used by the intermediary service towards the user.
        This information is meant for logging entries to enhance communication between Bank and user or Bank and intermediary service.
        This header might be ignored by the Bank.

      schema:
        type: string
      required: false

    SVC-Notification-URI:
      name: SVC-Notification-URI
      in: header
      description: |
        URI for the Endpoint of the SVC-API to which the status of a resource entity update should be sent.
        This header field may by ignored by the Bank.

        For security reasons, it shall be ensured that the SVC-Notification-URI as introduced above is secured by the intermediary service eIDAS QWAC used for identification of the intermediary service. The following applies:

        URIs which are provided by intermediary services in SVC-Notification-URI shall comply with the domain secured by the eIDAS QWAC certificate of the intermediary service in the field CN or SubjectAltName of the certificate. 
        
        Wildcard definitions shall be taken into account for compliance checks by the Bank.
        Banks may respond with IOBWS-Notification-Support set to false, if the provided URIs do not comply.
      schema:
        type: string
      required: false

    SVC-Notification-Content-Preferred:
      name: SVC-Notification-Content-Preferred
      in: header
      description: |
        The string has the form

        status=X1, ..., Xn

        where Xi is one of the constants SCA, PROCESS, LAST and where constants are not
        repeated.
        The usage of the constants supports the of following semantics:

          SCA: A notification on every change of the scaStatus attribute for all related authorisation processes is preferred by the intermediary service.

          PROCESS: A notification on all changes of consentStatus or transactionStatus attributes is preferred by the intermediary service.
          LAST: Only a notification on the last consentStatus or transactionStatus as available in the XS2A interface is preferred by the intermediary service.

        This header field may be ignored, if the Bank does not support resource notification services for the related intermediary service.
      schema:
        type: string
      required: false

    USR-ID:
      name: USR-ID
      in: header
      description: |
        Client ID of the user in the Bank client interface.

        Might be mandated in the Bank's documentation.

        It might be contained even if an OAuth2 based authentication was performed in a pre-step.
        In this case the Bank might check whether USR-ID and token match,
        according to Bank's documentation.
      schema:
        type: string
      required: false
      example: "USR-1234"

    USR-ID-Type:
      name: USR-ID-Type
      in: header
      description: |
        Type of the USR-ID, needed in scenarios where users have several USR-IDs as access possibility.

        In this case, the means and use are then defined in the Bankâ€™s documentation.
      schema:
        type: string
      required: false

    USR-Corporate-ID:
      name: USR-Corporate-ID
      in: header
      description: |
        Might be mandated in the Bank's documentation. Only used in a corporate context.
      schema:
        type: string
      required: false

    USR-Corporate-ID-Type:
      name: USR-Corporate-ID-Type
      in: header
      description: |
        Might be mandated in the Bank's documentation. Only used in a corporate context.
      schema:
        type: string
      required: false

    USR-IP-Address_mandatory:
      name: USR-IP-Address
      in: header
      description: |
        The forwarded IP Address header field consists of the corresponding http request IP Address field between user and intermediary service.
        If not available, the intermediary service shall use the IP Address used by the service when submitting this request.
      schema:
        type: string
        format: ipv4
      required: true
      example: 192.168.8.78

    USR-IP-Address_optional:
      name: USR-IP-Address
      in: header
      description: |
        The forwarded IP Address header field consists of the corresponding http request IP Address field between user and intermediary service.
      schema:
        type: string
        format: ipv4
      required: false
      example: 192.168.8.78

    USR-Accept:
      name: USR-Accept
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between user and intermediary service, if available.
      schema:
        type: string
      required: false

    USR-Accept-Charset:
      name: USR-Accept-Charset
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between user and intermediary service, if available.
      schema:
        type: string
      required: false

    USR-Accept-Encoding:
      name: USR-Accept-Encoding
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between user and intermediary service, if available.
      schema:
        type: string
      required: false

    USR-Accept-Language:
      name: USR-Accept-Language
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between user and intermediary service, if available.
      schema:
        type: string
      required: false

    USR-User-Agent:
      name: USR-User-Agent
      in: header
      description: |
        The forwarded Agent header field of the HTTP request between user and intermediary service, if available.
      schema:
        type: string
      required: false

    USR-Http-Method:
      name: USR-Http-Method
      in: header
      description: |
        HTTP method used at the user and intermediary service interface, if available.
        Valid values are:
        * GET
        * POST
        * PUT
        * PATCH
        * DELETE
      schema:
        type: string
        enum:
          - "GET"
          - "POST"
          - "PUT"
          - "PATCH"
          - "DELETE"
      required: false

    USR-Device-ID:
      name: USR-Device-ID
      in: header
      description: |
        UUID (Universally Unique Identifier) for a device, which is used by the intermediary service, if available.
        UUID identifies either a device or a device dependant application installation.
        In case of an installation identification this ID needs to be unaltered until removal from device.
      schema:
        type: string
        format: uuid
      required: false
      example: "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"

    USR-Geo-Location:
      name: USR-Geo-Location
      in: header
      description: |
        The forwarded Geo Location of the corresponding http request between user and intermediary service if available.
      schema:
        type: string
        pattern: 'GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}'
      required: false
      example: GEO:52.506931;13.144558

  # requestBodies:
  #####################################################
  # Reusable Request Bodies
  #####################################################

  headers:
  #####################################################
  # Reusable Response Header Elements
  #####################################################

    X-Request-ID:
      description: ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid

    Location:
      description: |
        Location of the created resource.
      schema:
        type: string
        format: url
      required: false

    #conditional for extended service lean push
    IOBWS-Notification-Support:
      description: |
        true if the Bank supports resource status notification services.

        false if the Bank supports resource status notification in general, but not for the current request.

        Not used, if resource status notification services are generally not supported by the Bank.

        Shall be supported if the Bank supports resource status notification services.
      schema:
        type: boolean
      required: false
  responses:
  #####################################################
  # Reusabale Responses
  #####################################################

            

    #####################################################
    # Positive Responses
    #####################################################
    OK_200_CURRENCIES:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/readCurrenciesResponse-200_json"
        examples:
          example:
            $ref: "#/components/examples/readCurrenciesResponse-200_json_Example"

    OK_200_BASE_CURRENCY_RATES:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/readCurrencyRateResponse-200_json"
        examples:
          example:
            $ref: "#/components/examples/readCurrencyRateResponse-200_json_Example"

    OK_200_CURRENCIES_SOURCES:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/readCurrencySourcesResponse-200_json"
        examples:
          example:
            $ref: "#/components/examples/readCurrencySourcesResponse-200_json_Example"

    OK_200_CURRENCY_RATES_BASE_CURRENCY:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/readCurrencyRatesBaseCurrencyResponse-200_json"
        examples:
          example:
            $ref: "#/components/examples/readCurrencyRatesBaseCurrencyResponse-200_json_Example"

    OK_200_CURRENCY_RATES_BASE_CURRENCY_HISTORY:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/readCurrencyRatesBaseCurrencyHistoryResponse-200_json"
        examples:
          example:
            $ref: "#/components/examples/readCurrencyRatesBaseCurrencyHistoryResponse-200_json_Example"

    
    #####################################################
    # Negative Responses
    #####################################################

    BAD_REQUEST_400:
      description: Bad Request

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error400_IOBWS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error400"

    UNAUTHORIZED_401:
      description: Unauthorized

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error401_IOBWS"

        application/problem+json:
          schema:
             $ref: "#/components/schemas/Error401"

    FORBIDDEN_403:
      description: Forbidden

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error403_IOBWS"

        application/problem+json:
          schema:
             $ref: "#/components/schemas/Error403"

    NOT_FOUND_404:
      description: Not found

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error404_IOBWS"

        application/problem+json:
          schema:
             $ref: "#/components/schemas/Error404"

    METHOD_NOT_ALLOWED_405:
      description: Method Not Allowed

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error405_IOBWS"

        application/problem+json:
          schema:
             $ref: "#/components/schemas/Error405"

    NOT_ACCEPTABLE_406:
      description: Not Acceptable

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error406_IOBWS"
        application/problem+json:
          schema:
             $ref: "#/components/schemas/Error406"

    REQUEST_TIMEOUT_408:
      description: Request Timeout

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes in case of HTTP code 408

    UNSUPPORTED_MEDIA_TYPE_415:
      description: Unsupported Media Type

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes in case of HTTP code 415

    TOO_MANY_REQUESTS_429:
      description: Too Many Requests

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error429_IOBWS"
        application/problem+json:

          schema:
             $ref: "#/components/schemas/Error429"

    INTERNAL_SERVER_ERROR_500:
      description: Internal Server Error
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes in case of HTTP code 500

    SERVICE_UNAVAILABLE_503:
      description: Service Unavailable
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes in case of HTTP code 503

  examples:
  #####################################################
  # Predefined Examples
  #####################################################

    readCurrenciesResponse-200_json_Example:
      description: List of available currencies.
      value:
        {
          "currencies": [
            {
              "currencyCode": "ISK",
              "description": "Icelandic krona"
            },
            {
              "currencyCode": "EUR",
              "description": "EURO"
            }
          ]
        }
        
    readCurrencySourcesResponse-200_json_Example:
      description: List of available currency sources.
      value:
        {
          "currencySources":
            {
              "sourceName": "General"
            },
            {
              "sourceName": "Notes"
            }
        }
    
    readCurrencyRateResponse-200_json_Example:
      description: List of available rates for a base currency.
      value:
        {
          "currencyRates": [
            {
              "baseCurrency": "ISK",
              "quoteCurrency": "EUR",
              "currencySource": "General",
              "buy": "154.34",
              "sell": "155.26",
              "date": "2020-08-02"
            },
            {
              "baseCurrency": "ISK",
              "quoteCurrency": "USD",
              "currencySource": "General",
              "buy": "130.95",
              "sell": "131.87",
              "date": "2020-08-02"
            }
          ]
        }
    
    readCurrencyRatesBaseCurrencyResponse-200_json_Example:
      description: List of available rates for a base currency.
      value:
        {
          "currencyRates": [
            {
              "baseCurrency": "ISK",
              "quoteCurrency": "EUR",
              "currencySource": "General",
              "buy": "154.34",
              "sell": "155.26",
              "date": "2020-08-02"
            }
          ]
        }
    
    readCurrencyRatesBaseCurrencyHistoryResponse-200_json_Example:
      description: List of available rates for a base currency.
      value:
        {
          "currencyRates": [
            {
              "baseCurrency": "ISK",
              "quoteCurrency": "EUR",
              "currencySource": "General",
              "buy": "154.34",
              "sell": "155.26",
              "date": "2020-08-02"
            }
          ]
        }    

security:
  #####################################################
  # Global security options
  #####################################################
  - {}

tags:
  #####################################################
  # Predefined Tags to Group Methods
  #####################################################
  
  - name: Currencies Information Service (CIS)
    description: |
      The Currency Information Service offers the following services:
        * Get a list of the available currencies
        * Retrieve all the sources of currency information available
        * Get available rates for a currency based on source
        * Get a specified rate for a currency based on a base currency
        * Get a list of historical rates for a currency based on a base currency
        