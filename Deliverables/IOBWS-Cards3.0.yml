openapi: 3.0.1
info:
  title: IOBWS 3.0 Debit and credit cards, details and statements
  version: "3.0"
  description: |
    # Summary

    This document contains version 3.0 of the Icelandic Online Banking Services (IOBWS), for currencies, released 
    as a technical specification (TS) no. 311 by the Icelandic Standards Council. Previous versions of IOBWS, released
    in 2007 and 2013 respectively, each used the then most recent OASIS SOAP standards to establish common banking
    interfaces for the Icelandic market. They specified strict security requirements involving a combination of 
    WS-Security X.509 Binary Security and Username tokens, making implementations on some platforms and frameworks
    cumbersome, especially when third party service providers are involved. In the meantime new technology standards
    have emerged and Europe been catching up to Iceland. The aim in v3.0 is to therefore to offer a modern, open, 
    and interoperable set of Application Programming Interfaces (APIs) to provide data securely.

  license:
    name: Creative Commons Attribution 4.0 International Public License
    url: https://creativecommons.org/licenses/by/4.0/
  contact:
    name: Stadlarad Islands
    url: https://www.stadlar.is
    email: openbanking@stadlar.is

externalDocs:
  description: |
    Documentation for TS 312 (General Introduction Paper, Operational Rules, Implementation Guidelines)
  url: https://github.com/stadlar/IST-FUT-FMTH/blob/82d040dbed6cad040b043c3a1fd67a16060d9726/Deliverables/%C3%8DST-TS-312_2021%20Currency.pdf

servers:
  - url: https://psd2.example.com
    description: PSD2 server
  - url: https://sandbox-psd2.example.com
    description: Optional PSD2 sandbox server

paths:

  #####################################################
  # Card Information Service
  #####################################################

  /v1/cards:

    get:
      summary: Read list of cards.
      description: |
        Reads a list of cards potentially with additional information, e.g. balance information.
        It is assumed that a consent of the PSU to this access is already given and stored on the ASPSP system.
        The addressed list of cards depends then on the stored consent addressed by consentId, respectively the OAuth2 access token.

      operationId: readListOfCards
      tags:
        - cards
        - list

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      #In this file only the basic security element to transport
      # the bearer token of an an OAuth2 process, which has to
      # be included inthe HTTP header ist described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommandes to adjust the security schemes according to
      # your system enviroments and security policies.
      #####################################################
        - {}
        # - BearerAuthOAuth: []

      parameters:
        #path # NO PATH PARAMETER
        #query # NO QUERY PARAMETER
        #header
        #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #- $ref: "#/components/parameters/consentId_HEADER_mandatory"
        #optional header parameters
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/Authorization"

      # no request body
      # requestBody:

      responses:
        '200':
          $ref: "#/components/responses/OK_200_CARDS"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"

  /v1/cards/{card-id}:

    get:
      summary: Read card details.
      description: |
        Reads details about a card. It is assumed that a consent of the PSU to this access is already given and stored on the ASPSP system.
        The addressed details of this account depends then on the stored consent addressed by consentId, respectively the OAuth2 access
        token.

      operationId: readCardDetails
      tags:
        - cards
        - details

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to 
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        # - BearerAuthOAuth: []

      parameters:
        #path
        - $ref: "#/components/parameters/card-id"
        #query # NO QUERY PARAMETER
        #header
        #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #- $ref: "#/components/parameters/consentId_HEADER_mandatory"
        #optional header parameters
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/Authorization"

      # no request body
      # requestBody:

      responses:
        '200':
          $ref: "#/components/responses/OK_200_CARDDETAILS"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"

  /v1/cards/{card-id}/balances:

    get:
      summary: Read card balances.
      description: |
         Read detailed balance information about the addressed card by "card-id".
         For a given card, an optional parameter "dateFrom" defines the begin of a period from which to obtain available balance related information.
         Please note, that the current credit line of a given card might be
         tighter than what a response to this request will suggest due to general credit limits on the card account and transactions by
         other cards to the same card account.

      operationId: readCardBalances
      tags:
        - cards
        - balances

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      #In this file only the basic security element to transport
      # the bearer token of an an OAuth2 process, which has to
      # be included inthe HTTP header ist described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommandes to adjust the security schemes according to
      # your system enviroments and security policies.
      #####################################################
        - {}
        # - BearerAuthOAuth: []

      parameters:
        #path
        - $ref: "#/components/parameters/card-id"
        #query
        - $ref: "#/components/parameters/dateFrom"
        #header
        #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #- $ref: "#/components/parameters/consentId_HEADER_mandatory"
        #optional header parameters
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/Authorization"

      # no request body
      # requestBody:

      responses:
        '200':
          $ref: "#/components/responses/OK_200_CARDBALANCES"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"

  /v1/cards/{card-id}/transactions:

    get:
      summary: Read account data.
      description: |
        Reads account data from a given card addressed by "card-id".

      operationId: readAccountData
      tags:
        - cards
        - account data
        - transactions

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      #In this file only the basic security element to transport
      # the bearer token of an an OAuth2 process, which has to
      # be included inthe HTTP header ist described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommandes to adjust the security schemes according to
      # your system enviroments and security policies.
      #####################################################
        - {}
        # - BearerAuthOAuth: []

      parameters:
        #path
        - $ref: "#/components/parameters/card-id"
        #query
        - $ref: "#/components/parameters/dateFrom"
        - $ref: "#/components/parameters/dateTo"
        - $ref: "#/components/parameters/bookingStatus"
        - $ref: "#/components/parameters/deltaList"
        #header
        #mandatory header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #- $ref: "#/components/parameters/consentId_HEADER_mandatory"
        #optional header parameters
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/Authorization"

      # no request body
      # requestBody:

      responses:
        '200':
          $ref: "#/components/responses/OK_200_CARDTRANSACTIONS"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"

components:
#####################################################
# Predefined Components
#####################################################

  schemas:
  #####################################################
  # Predefined Schemas
  #####################################################

    cardDetails:
      description: |
        Card details.
      type: object
      required:
        - resourceId
        - maskedPan
        - currency
        - cardholderName
        - expDate
      properties:
        resourceId:
          description: |
            This is the data element to be used in the path when retrieving data from a dedicated account.
            This shall be filled, if addressable resource are created by the ASPSP on the /cards endpoint.
          type: string
        maskedPan:
          $ref: "#/components/schemas/maskedPan"
        currency:
          $ref: "#/components/schemas/currencyCode"
        ownerName:
          $ref: "#/components/schemas/ownerName"
        expDate:
          $ref: "#/components/schemas/expDate"
        issueDate:
          $ref: "#/components/schemas/issueDate"
        cardholderName:
          $ref: "#/components/schemas/cardholderName"
        panId:
          $ref: "#/components/schemas/panId"
        bank:
          $ref: "#/components/schemas/bank"
        name:
          description: |
            Name of the account, as assigned by the ASPSP,
            in agreement with the account owner in order to provide an additional means of identification of the account.
          type: string
          maxLength: 70
        displayName:
          $ref: "#/components/schemas/displayName"
        product:
          description: |
            Product Name of the Bank for this account, proprietary definition.
          type: string
          maxLength: 35
        status:
          $ref: "#/components/schemas/accountStatus"
        usage:
          description: |
            Specifies the usage of the account:
              * PRIV: private personal account
              * ORGA: professional account
          type: string
          maxLength: 4
          enum:
            - "PRIV"
            - "ORGA"
        details:
          description: |
            Specifications that might be provided by the ASPSP:
              - characteristics of the account
              - characteristics of the relevant card
          type: string
          maxLength: 500
        creditLimit:
          $ref: "#/components/schemas/amount"
        balances:
          $ref: "#/components/schemas/balanceList"
        _links:
          $ref: "#/components/schemas/_linksAccountDetails"
    cardList:
      description: |
        List of card accounts with details.
      type: object
      required:
        - cardAccounts
      properties:
        cardAccounts:
          type: array
          items:
            $ref: "#/components/schemas/cardDetails"

#####################################################
# Content of Request Bodies
#####################################################
    cardId:
      description: |
        Uniquie identifier for card
      type: string
      maxLength: 35

#####################################################
# _links
#####################################################

  parameters:
  #####################################################
  # Predefined Parameters
  #####################################################

    card-id:
      name: card-id
      in: path
      description: |
        This identification is denoting the addressed card. The card-id is retrieved by using a "Read Card List" call.
        The card-id is the "resourceId" attribute of the card structure. Its value is constant at least throughout the lifecycle
        of a given consent.
      required: true
      schema:
        $ref: "#/components/schemas/cardId"

  requestBodies:
  #####################################################
  # Reusable Request Bodies
  #####################################################

  headers:
  #####################################################
  # Reusable Response Header Elements
  #####################################################

  responses:
  #####################################################
  # Reusabale Responses
  #####################################################

    #####################################################
    # Positive Responses
    #####################################################

    readCardBalanceResponse-200:
      description: Body of the response for a successful read balance for a card request.
      type: object
      required:
        - balances
      properties:
        cardAccount:
          $ref: "#/components/schemas/accountReference"
        balances:
          $ref: "#/components/schemas/balanceList"

    cardsTransactionsResponse200:
      description: |
        Body of the JSON response for a successful read card transaction list request.
        This card account report contains transactions resulting from the query parameters.
      type: object
      properties:
        cardAccount:
          $ref: "#/components/schemas/accountReference"
        cardTransactions:
          $ref: "#/components/schemas/cardAccountReport"
        balances:
          $ref: "#/components/schemas/balanceList"
        _links:
          $ref: "#/components/schemas/_linksDownload"


    readCardListResponse-200_json:
      description: Descriptions of the accessible cards.
      type: object
      required:
        - cards
      properties:
        cards:
          type: array
          items:
            $ref: "#/components/schemas/cardAccountDetails"

    readCardDetailsResponse-200_json:
      description: Details of the card.
      type: object
      required:
        - card
      properties:
        card:
          $ref: "#/components/schemas/cardAccountDetails"

    readCardBalancesResponse-200_json:
      description: Balances of the cards.
      type: object
      required:
        - balances
      properties:
        card:
          $ref: "#/components/schemas/accountReference"
        balances:
          $ref: "#/components/schemas/balanceList"

    readCardTransactionsResponse-200_json:
      description: Balances of the cards.
      type: object
      properties:
        card:
          $ref: "#/components/schemas/cardAccountDetails"
        balances:
          $ref: "#/components/schemas/balanceList"

    OK_200_CARDS:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/readCardListResponse-200_json"
          examples:
            example:
              $ref: "#/components/examples/readCardListResponse-200_json_Example"

    OK_200_CARDDETAILS:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/readCardDetailsResponse-200_json"
          examples:
            "Example 1 (standard card)":
              $ref: "#/components/examples/readCardDetailsResponse-200_json_Example1"
            "Example 2 (multicurrency card with balances)":
              $ref: "#/components/examples/readCardDetailsResponse-200_json_Example2"

    OK_200_CARDBALANCES:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/readCardBalancesResponse-200_json"
          examples:
            "Example 1: Example on current balance only":
              $ref: "#/components/examples/readCardBalancesResponse-200_json_Example1"
            "Example 2: Example on booked balances of the past requested in addition":
              $ref: "#/components/examples/readCardBalancesResponse-200_json_Example2"

    OK_200_CARDTRANSACTIONS:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/readCardTransactionsResponse-200_json"
          examples:
            example:
              $ref: "#/components/examples/readCardTransactionsResponse-200_json_Example"

    OK_200_CardList:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/cardList"
          examples:
            "Example 1":
              $ref: "#/components/examples/cardListExample1"

    OK_200_CardBalances:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/readCardBalanceResponse-200"
          examples:
            "Example:":
              $ref: "#/components/examples/balancesExample_Card"

    OK_200_CardsTransactions:
      description: OK
      
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/cardsTransactionsResponse200"

    
    #####################################################
    # Negative Responses
    #####################################################

  examples:
  #####################################################
  # Predefined Examples
  #####################################################
    readCardListResponse-200_json_Example:
      description: Read card list.
      value:
        {
          "cards": [
            {
              "resourceId": "4d9a81b3-a47d-4130-8765-a9c0ff861b99",
              "maskedPan": "525412******3241",
              "currency": "EUR",
              "name": "Main",
              "product": "Basic Credit Card",
              "status": "enabled",
              "creditLimit": { "currency": "EUR", "amount": "5000" },
              "balances": [
                {
                  "balanceType": "interimBooked",
                  "balanceAmount": { "currency": "EUR", "amount": "1390.10" }
                },{
                "balanceType": "interimAvailable",
                “creditLimitIncluded”: true,
                "balanceAmount": { "currency": "EUR", "amount": "3609.90" }
              }
            ]
          },{
            "resourceId": "4d9a81b3-a47d-4130-8765-a9c0ff861b98",
            "maskedPan": "525412******3242",
            "currency": "EUR",
            "name": "PartnerCard",
            "product": "Basic Credit Card",
            "status": "enabled",
            "creditLimit": { "currency": "EUR", "amount": "5000" },
            "balances": [
              {
                "balanceType": "interimBooked",
                "balanceAmount": { "currency": "EUR", "amount": "559.10" }
              },{
                "balanceType": "interimAvailable",
                “creditLimitIncluded”: true,
                "balanceAmount": { "currency": "EUR", "amount": "4440.90" }
              }
            ]
          }
        ]
      }

    readCardDetailsResponse-200_json_Example1:
      description: Read card details.
      value:
        {
          "card": {
            "resourceId": "4d9a81b3-a47d-4130-8765-a9c0ff861b99",
            "maskedPan": "525412******3241",
            "currency": "EUR",
            "name": "Main",
            "product": "Basic Credit Card",
            "status": "enabled",
            "creditLimit": {
              "currency": "EUR",
              "amount": "5000"
            },
            "balances": [
              {
                "balanceType": "interimBooked",
                "balanceAmount": {
                  "currency": "EUR",
                  "amount": "1390.10"
                }
              },
              {
                "balanceType": "interimAvailable",
                "creditLimitIncluded": true,
                "balanceAmount": {
                  "currency": "EUR",
                  "amount": "3609.90"
                }
              }
            ],
            "_links": {
              "self": {
                "href": "/v1/cards/4d9a81b3-a47d-4130-8765-a9c0ff861b99"
              },
              "transactions": {
                "href": "/v1/cards/4d9a81b3-a47d-4130-8765-a9c0ff861b99/transactions"
              }
            }
          }
        }

    readCardDetailsResponse-200_json_Example2:
      description: Read card details.
      value:
        {
          "card": {
            "resourceId": "4d9a81b3-a47d-4130-8765-a9c0ff861b99",
            "maskedPan": "525412******3241",
            "currency": "XXX",
            "name": "Main",
            "product": "Basic Credit Card",
            "status": "enabled",
            "creditLimit": {
              "currency": "EUR",
              "amount": "5000"
            },
            "balances": [
              {
                "balanceType": "interimBooked",
                "balanceAmount": {
                  "currency": "EUR",
                  "amount": "1390.10"
                }
              },
              {
                "balanceType": "interimAvailable",
                "creditLimitIncluded": true,
                "balanceAmount": {
                  "currency": "EUR",
                  "amount": "3155.17"
                }
              },
              {
                "balanceType": "interimBooked",
                "balanceAmount": {
                  "currency": "USD",
                  "amount": "500.20"
                }
              },
              {
                "balanceType": "interimAvailable",
                "creditLimitIncluded": true,
                "balanceAmount": {
                  "currency": "EUR",
                  "amount": "3470.69"
                }
              }
            ],
            "_links": {
              "self": {
                "href": "/v1/cards/4d9a81b3-a47d-4130-8765-a9c0ff861b99"
              },
              "transactions": {
                "href": "/v1/cards/4d9a81b3-a47d-4130-8765-a9c0ff861b99/transactions"
              }
            }
          }
        }

    readCardBalancesResponse-200_json_Example1:
      description: |
        Read card balances.
        Example on current balance only
      value:
        {
          "card": {"maskedPan": "525412******3241"},
          "balances":
            [
              {
                "balanceAmount":
                  {
                    "currency": "EUR",
                    "amount": "5654.22"
                  },
                "balanceType": "interimAvailable",
                "creditLimitIncluded": true
              },
              {
                "balanceAmount":
                  {
                    "currency": "EUR",
                    "amount": "-4355.78"
                  },
                "balanceType": "interimBooked"
              }
            ]
          }

    readCardBalancesResponse-200_json_Example2:
      description: |
        Read card balances.
        Example on booked balances of the past requested in addition
      value:
        {
          "card": {"maskedPan": "525412******3241"},
          "balances":
            [
              {
                "balanceAmount": { "currency": "EUR", "amount": "5654.22" },
                "balanceType": "interimAvailable",
                "creditLimitIncluded": true,
              },
              {
                "balanceAmount":
                  {
                    "currency": "EUR",
                    "amount": "-4355.78"
                  },
                "balanceType": "interimBooked"
              },
              {
                "balanceAmount":
                  {
                    "currency": "EUR",
                    "amount": "-2255.45"
                  },
                "balanceType": "closingBooked",
                "referenceDate": "2020-06-30"
              },
              {
                "balanceAmount":
                  {
                    "currency": "EUR",
                    "amount": "-1234.56"
                  },
                "balanceType": "closingBooked",
                "referenceDate": "2020-07-31"
              },
              {
                "balanceAmount":
                  {
                    "currency": "EUR",
                    "amount": "-234.01"
                  },
                "balanceType": "closingBooked",
                "referenceDate": "2020-08-31"
               }
            ]
        }

    readCardTransactionsResponse-200_json_Example:
      description: Read card transaction list.
      value:
        {
          "card": {
            "maskedPan": "525412******3241"
          },
          "cardTransactions": {
            "booked": [
              {
                "cardTransactionId": "201710020036959",
                "transactionAmount": {
                  "currency": "EUR",
                  "amount": "256.67"
                },
                "transactionDate": "2017-10-25",
                "bookingDate": "2017-10-26",
                "originalAmount": {
                  "currency": "SEK",
                  "amount": "2499"
                },
                "cardAcceptorAddress": {
                  "city": "STOCKHOLM",
                  "country": "SE"
                },
                "proprietaryBankTransactionCode": "PURCHASE",
                "invoiced": false,
                "transactionDetails": "WIFIMARKET.SE"
              },
              {
                "cardTransactionId": "201710020091863",
                "transactionAmount": {
                  "currency": "EUR",
                  "amount": "10.72"
                },
                "transactionDate": "2017-10-25",
                "bookingDate": "2017-10-26",
                "originalAmount": {
                  "currency": "SEK",
                  "amount": "99"
                },
                "cardAcceptorAddress": {
                  "city": "STOCKHOLM",
                  "country": "SE"
                },
                "proprietaryBankTransactionCode": "PURCHASE",
                "invoiced": false,
                "transactionDetails": "ICA SUPERMARKET SKOGHA"
              }
            ],
            "pending": [],
            "_links": {
              "card": {
                "href": "/v1/cards/4d9a81b3-a47d-4130-8765-a9c0ff861b99"
              }
            }
          }
        }

    cardListExample1:
      summary: Card list example 1
      description: |
        Card list example.
      value:
        {
        "cardAccounts": [
          {
            "resourceId": "3d9a81b3-a47d-4130-8765-a9c0ff861b99",
            "maskedPan": "525412******3241",
            "currency": "EUR",
            "name": "Main",
            "product": "Basic Credit",
            "status": "enabled",
            "creditLimit": { "currency": "EUR", "amount": "15000" },
            "balances": [
              {
                "balanceType": "interimBooked",
                "balanceAmount": { "currency": "EUR", "amount": "14355.78" }
              },{
                "balanceType": "nonInvoiced",
                "balanceAmount": { "currency": "EUR", "amount": "4175.86" }
              }
            ],
            "_links": {
              "transactions": {
                "href": "/v1/card-accounts/3d9a81b3-a47d-4130-8765-a9c0ff861b99/transactions"
              }
            }
          }
        ]
      }

    balancesExample_Card:
      description: |
        Response in case of card balance request.
      value:
        {
          "cardAccount": {"maskedPan": "525412******3241"},
          "balances":[
            {
              "balanceType": "interimBooked",
              "balanceAmount": { "currency": "EUR", "amount": "14355.78" }
            },{
              "balanceType": "nonInvoiced",
              "balanceAmount": { "currency": "EUR", "amount": "4175.86" }
            }
          ]
        }
  
security:
  #####################################################
  # Global security options
  #####################################################
  - {}

tags:
  #####################################################
  # Predefined Tags to Group Methods
  #####################################################